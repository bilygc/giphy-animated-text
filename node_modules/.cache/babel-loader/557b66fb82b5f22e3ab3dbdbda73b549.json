{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getAltText = exports.getGifWidth = exports.getGifHeight = exports.getBestRenditionUrl = exports.getBestRendition = exports.getBestVideo = exports.getSpecificRendition = void 0;\n\nvar bestfit_1 = __importDefault(require(\"./bestfit\"));\n\nvar collections_1 = require(\"./collections\");\n\nvar webp_check_1 = require(\"./webp-check\");\n\nvar getSpecificRendition = function (_a, renditionLabel, isStill, useVideo) {\n  var images = _a.images,\n      isSticker = _a.is_sticker;\n\n  if (isStill === void 0) {\n    isStill = false;\n  }\n\n  if (useVideo === void 0) {\n    useVideo = false;\n  }\n\n  if (!images || !renditionLabel) return '';\n  isStill = isStill && !useVideo; // @ts-ignore come back to this\n\n  var rendition = images[\"\" + renditionLabel + (isStill ? '_still' : '')];\n\n  if (rendition) {\n    if (isSticker || isStill) {\n      return rendition.url;\n    }\n\n    var webP = webp_check_1.SUPPORTS_WEBP && rendition.webp;\n    return useVideo ? rendition.mp4 : webP || rendition.url;\n  }\n\n  return '';\n};\n\nexports.getSpecificRendition = getSpecificRendition;\n\nvar getBestVideo = function (video, width, height) {\n  var assets = video === null || video === void 0 ? void 0 : video.assets;\n\n  if (assets) {\n    assets = __assign({}, assets); // @ts-ignore we don't show source according to the existing code\n\n    delete assets.source;\n    var filteredAssets = Object.values(assets).sort(function (a, b) {\n      return a.width - b.width;\n    });\n    return bestfit_1.default(filteredAssets, width, height);\n  }\n};\n\nexports.getBestVideo = getBestVideo;\n\nvar getRenditions = function (type, images, video) {\n  return type === 'video' && video && video.previews && !Object.keys(images).length ? video.previews : images;\n};\n\nvar getBestRendition = function (images, gifWidth, gifHeight, scaleUpMaxPixels) {\n  var checkRenditions = collections_1.pick(images, ['original', 'fixed_width', 'fixed_height', 'fixed_width_small', 'fixed_height_small']);\n  var testImages = Object.entries(checkRenditions).map(function (_a) {\n    var renditionName = _a[0],\n        val = _a[1];\n    return __assign({\n      renditionName: renditionName\n    }, val);\n  });\n  return bestfit_1.default(testImages, gifWidth, gifHeight, scaleUpMaxPixels);\n};\n\nexports.getBestRendition = getBestRendition;\n\nvar getBestRenditionUrl = function (_a, gifWidth, gifHeight, options) {\n  var images = _a.images,\n      video = _a.video,\n      type = _a.type;\n\n  if (options === void 0) {\n    options = {\n      isStill: false,\n      useVideo: false\n    };\n  }\n\n  if (!gifWidth || !gifHeight || !images) return '';\n  var useVideo = options.useVideo,\n      isStill = options.isStill,\n      scaleUpMaxPixels = options.scaleUpMaxPixels;\n  var renditions = getRenditions(type, images, video);\n  var renditionName = exports.getBestRendition(renditions, gifWidth, gifHeight, scaleUpMaxPixels).renditionName; // still, video, webp or gif\n\n  var key = \"\" + renditionName + (isStill && !useVideo ? '_still' : '');\n  var rendition = renditions[key];\n  var match = useVideo ? rendition.mp4 : webp_check_1.SUPPORTS_WEBP && rendition.webp ? rendition.webp : rendition.url;\n  return match || '';\n};\n\nexports.getBestRenditionUrl = getBestRenditionUrl;\n\nvar getGifHeight = function (_a, gifWidth) {\n  var images = _a.images;\n  var fixed_width = images.fixed_width;\n\n  if (fixed_width) {\n    var width = fixed_width.width,\n        height = fixed_width.height;\n    var aspectRatio = width / height;\n    return Math.round(gifWidth / aspectRatio);\n  }\n\n  return 0;\n};\n\nexports.getGifHeight = getGifHeight;\n\nvar getGifWidth = function (_a, gifHeight) {\n  var images = _a.images;\n  var fixed_width = images.fixed_width;\n\n  if (fixed_width) {\n    var width = fixed_width.width,\n        height = fixed_width.height;\n    var aspectRatio = width / height;\n    return Math.round(gifHeight * aspectRatio);\n  }\n\n  return 0;\n};\n\nexports.getGifWidth = getGifWidth;\n/**\n * GIF Text - Alt Text: Generates alt text for\n * GIF images based on username and tags.\n * @prop  {Gif}\n * @return {String} GIF alt text.\n */\n\nvar getAltText = function (_a) {\n  var user = _a.user,\n      _b = _a.tags,\n      tags = _b === void 0 ? [] : _b,\n      _c = _a.is_sticker,\n      is_sticker = _c === void 0 ? false : _c,\n      _d = _a.title,\n      title = _d === void 0 ? '' : _d;\n\n  if (title) {\n    return title;\n  }\n\n  var username = user && user.username || '';\n  var filteredTags = collections_1.take(collections_1.without(tags, ['transparent']), username ? 4 : 5);\n  return \"\" + (username ? username + \" \" : \"\") + filteredTags.join(' ') + \" \" + (is_sticker ? 'Sticker' : 'GIF');\n};\n\nexports.getAltText = getAltText;","map":{"version":3,"sources":["../src/gif-utils.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getAltText = exports.getGifWidth = exports.getGifHeight = exports.getBestRenditionUrl = exports.getBestRendition = exports.getBestVideo = exports.getSpecificRendition = void 0;\nvar bestfit_1 = __importDefault(require(\"./bestfit\"));\nvar collections_1 = require(\"./collections\");\nvar webp_check_1 = require(\"./webp-check\");\nvar getSpecificRendition = function (_a, renditionLabel, isStill, useVideo) {\n    var images = _a.images, isSticker = _a.is_sticker;\n    if (isStill === void 0) { isStill = false; }\n    if (useVideo === void 0) { useVideo = false; }\n    if (!images || !renditionLabel)\n        return '';\n    isStill = isStill && !useVideo;\n    // @ts-ignore come back to this\n    var rendition = images[\"\" + renditionLabel + (isStill ? '_still' : '')];\n    if (rendition) {\n        if (isSticker || isStill) {\n            return rendition.url;\n        }\n        var webP = webp_check_1.SUPPORTS_WEBP && rendition.webp;\n        return useVideo ? rendition.mp4 : webP || rendition.url;\n    }\n    return '';\n};\nexports.getSpecificRendition = getSpecificRendition;\nvar getBestVideo = function (video, width, height) {\n    var assets = video === null || video === void 0 ? void 0 : video.assets;\n    if (assets) {\n        assets = __assign({}, assets);\n        // @ts-ignore we don't show source according to the existing code\n        delete assets.source;\n        var filteredAssets = Object.values(assets).sort(function (a, b) { return a.width - b.width; });\n        return bestfit_1.default(filteredAssets, width, height);\n    }\n};\nexports.getBestVideo = getBestVideo;\nvar getRenditions = function (type, images, video) {\n    return type === 'video' && video && video.previews && !Object.keys(images).length ? video.previews : images;\n};\nvar getBestRendition = function (images, gifWidth, gifHeight, scaleUpMaxPixels) {\n    var checkRenditions = collections_1.pick(images, [\n        'original',\n        'fixed_width',\n        'fixed_height',\n        'fixed_width_small',\n        'fixed_height_small',\n    ]);\n    var testImages = Object.entries(checkRenditions).map(function (_a) {\n        var renditionName = _a[0], val = _a[1];\n        return (__assign({ renditionName: renditionName }, val));\n    });\n    return bestfit_1.default(testImages, gifWidth, gifHeight, scaleUpMaxPixels);\n};\nexports.getBestRendition = getBestRendition;\nvar getBestRenditionUrl = function (_a, gifWidth, gifHeight, options) {\n    var images = _a.images, video = _a.video, type = _a.type;\n    if (options === void 0) { options = { isStill: false, useVideo: false }; }\n    if (!gifWidth || !gifHeight || !images)\n        return '';\n    var useVideo = options.useVideo, isStill = options.isStill, scaleUpMaxPixels = options.scaleUpMaxPixels;\n    var renditions = getRenditions(type, images, video);\n    var renditionName = exports.getBestRendition(renditions, gifWidth, gifHeight, scaleUpMaxPixels).renditionName;\n    // still, video, webp or gif\n    var key = \"\" + renditionName + (isStill && !useVideo ? '_still' : '');\n    var rendition = renditions[key];\n    var match = useVideo ? rendition.mp4 : webp_check_1.SUPPORTS_WEBP && rendition.webp ? rendition.webp : rendition.url;\n    return (match || '');\n};\nexports.getBestRenditionUrl = getBestRenditionUrl;\nvar getGifHeight = function (_a, gifWidth) {\n    var images = _a.images;\n    var fixed_width = images.fixed_width;\n    if (fixed_width) {\n        var width = fixed_width.width, height = fixed_width.height;\n        var aspectRatio = width / height;\n        return Math.round(gifWidth / aspectRatio);\n    }\n    return 0;\n};\nexports.getGifHeight = getGifHeight;\nvar getGifWidth = function (_a, gifHeight) {\n    var images = _a.images;\n    var fixed_width = images.fixed_width;\n    if (fixed_width) {\n        var width = fixed_width.width, height = fixed_width.height;\n        var aspectRatio = width / height;\n        return Math.round(gifHeight * aspectRatio);\n    }\n    return 0;\n};\nexports.getGifWidth = getGifWidth;\n/**\n * GIF Text - Alt Text: Generates alt text for\n * GIF images based on username and tags.\n * @prop  {Gif}\n * @return {String} GIF alt text.\n */\nvar getAltText = function (_a) {\n    var user = _a.user, _b = _a.tags, tags = _b === void 0 ? [] : _b, _c = _a.is_sticker, is_sticker = _c === void 0 ? false : _c, _d = _a.title, title = _d === void 0 ? '' : _d;\n    if (title) {\n        return title;\n    }\n    var username = (user && user.username) || '';\n    var filteredTags = collections_1.take(collections_1.without(tags, ['transparent']), username ? 4 : 5);\n    return \"\" + (username ? username + \" \" : \"\") + filteredTags.join(' ') + \" \" + (is_sticker ? 'Sticker' : 'GIF');\n};\nexports.getAltText = getAltText;\n//# sourceMappingURL=gif-utils.js.map"]},"metadata":{},"sourceType":"script"}